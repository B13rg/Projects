#ifndef CPU_H
#define CPU_H

#include <bits/stdc++.h>
using namespace std;


class chip8{
	private:
		//4k of memory
		//Memory map:
		//0x000-0x1FF - Chip 8 interpreter (contains font set in emu)
		//0x050-0x0A0 - Used for the built in 4x5 pixel font set (0-F)
		//0x200-0xFFF - Program ROM and work RAM
		unsigned char memory[4096];
		//15 8bit registers and 1 carry flag register
		unsigned char V[16];
		//Index and PC, range 0x000-0xFFF
		unsigned short I;
		unsigned short pc;		
		//Interrupts and hardware registers
		unsigned char delay_timer;
		unsigned char sound_timer;
		unsigned short stack[16];
		unsigned short sp;
		unsigned short opcode;
	public:
		bool drawFlag;
		//64*32 playfield of pixels
		unsigned char gfx[64*32];
		//Keypad
		unsigned char key[16];

		void initialize();
		bool loadApplication(string filename);
		void emulateCycle();
		unsigned char chip8_fontset[80] =
		{ 
			0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
			0x20, 0x60, 0x20, 0x20, 0x70, // 1
			0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
			0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
			0x90, 0x90, 0xF0, 0x10, 0x10, // 4
			0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
			0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
			0xF0, 0x10, 0x20, 0x40, 0x40, // 7
			0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
			0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
			0xF0, 0x90, 0xF0, 0x90, 0x90, // A
			0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
			0xF0, 0x80, 0x80, 0x80, 0xF0, // C
			0xE0, 0x90, 0x90, 0x90, 0xE0, // D
			0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
			0xF0, 0x80, 0xF0, 0x80, 0x80  // F
		};
};

#endif